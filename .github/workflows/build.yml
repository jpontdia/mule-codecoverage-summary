name: Build and deploy
run-name: ${{ github.actor }} is testing code coverage summary ðŸš€

on:
  push:
env:
  GITHUB_ORGANIZATION: jpontdia
  GIST_ID: 497b75eb7c74c14113baa9a875bed936
jobs:
  Mulesoft:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Publish Test Results
        id: unit-test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/surefire-reports/*.xml
          check_name: Unit Test Results

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.unit-test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Unit test
          status: '${{ fromJSON( steps.unit-test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.unit-test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.unit-test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: mule-codecoverage-summary-ut.svg

      - name: Upload badge to Gist
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@master
        with:
          token: ${{ secrets.GIST_TOKEN }} 
          gistURL: "https://gist.githubusercontent.com/$GITHUB_ORGANIZATION/$GIST_ID"
          file: mule-codecoverage-summary-ut.svg

      - name: Summary - Add code coverage
        if:  ${{ false }}
        run: |
          temporal=""
          line=0
          trigger=0
          while IFS= read -r p; do
          
            if [[ "$p" == *"<div class=\"col-md-8 col-md-offset-2\">"* ]]; then
              echo "Summary starts at line: $line"
              ((line=line+1))
              trigger=1
              continue
            fi

            if [[ $trigger == 1 ]]; then
              # echo "${p:0:6}"
              echo "$p"
              if [[ "${p:0:6}" == "</div>" ]]; then
                echo "Exit condition at line: $line"
                break
              else
                temporal+=$p
              fi
            fi

            ((line=line+1))
          done < target/site/munit/coverage/summary.html

          # Remove html tag: <a>
          temporal=$(sed -e 's/<\/a[^>]*>//g' <<<"$temporal")
          temporal=$(sed -e 's/<a[^>]*>//g' <<<"$temporal")

          # Add job summary 
          echo "<div>" >> $GITHUB_STEP_SUMMARY
          echo "$temporal" >> $GITHUB_STEP_SUMMARY
          echo "</div>" >> $GITHUB_STEP_SUMMARY
